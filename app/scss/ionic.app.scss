/*
To customize the look and feel of Ionic, you can override the variables
in ionic's _variables.scss file.

For example, you might change some of the default colors:

$light:                           #fff !default;
$stable:                          #f8f8f8 !default;
$positive:                        #387ef5 !default;
$calm:                            #11c1f3 !default;
$balanced:                        #33cd5f !default;
$energized:                       #ffc900 !default;
$assertive:                       #ef473a !default;
$royal:                           #886aea !default;
$dark:                            #444 !default;
*/

// The path for our ionicons font files, relative to the built CSS in www/css
$ionicons-font-path: "../lib/ionic/fonts" !default;

$royal:                           #826EE6 !default;
//$royal:                           #6633CC !default;

// Include all of Ionic
@import "www/lib/ionic/scss/ionic";

.align-right {
  text-align: right;
}

.align-center {
  text-align: center;
}

.float-left {
  float: left;
}

.float-right {
  float: right;
}

.popup-title {
  font-size: 18px;
}

.spinner {
  -webkit-animation:spin 2s linear infinite;
  animation:spin 2s linear infinite;
}

h1 {
  font-size: larger;
}

h6 {
  color: #cccccc;
}

.button-round {
  height: 40px;
  width: 40px;
  padding: 4px;
  top: 8px;
  border-radius: 100%;
}

.feedback-label-text-wrap {
  white-space: normal;
  width: 80%;
  max-width: none;
}

.feedback-input {
  padding: 12px 16px 16px 16px;
}

.feedback-input .input-label {
  white-space: normal;
  width: 100%;
  max-width: none;
}

.hidden-grid, .hidden-grid .col {
  padding: 0;
}

.hidden-grid a, .hidden-grid div, .hidden-grid label {
  border: 0;
}

// TODO: if necessary, make this a unique class 'selector'
input[readonly]:not(.cloned-text-input) {
  background-color: inherit;
  cursor: inherit;
}

.chat.ng-enter {
  -webkit-transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms;
  transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms;

  margin-left: 100%;
}

.chat.ng-enter-active {
  margin-left: 0;
}

.chat.ng-leave {
  -webkit-transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms;
  transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms;

  margin-left: 0;
}

.chat.ng-leave-active {
  margin-left: 100%;
}

.slide-in-right {
  -webkit-transform: translate3d(-100%, 0, 0);
  transform: translate3d(-100%, 0, 0); }

.slide-in-right.ng-enter, .slide-in-right > .ng-enter {
  -webkit-transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms;
  transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms; }

.slide-in-right.ng-enter-active, .slide-in-right > .ng-enter-active {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slide-in-right.ng-leave, .slide-in-right > .ng-leave {
  -webkit-transition: all ease-in-out 250ms;
  transition: all ease-in-out 250ms; }

.slide-in-left {
  -webkit-transform: translate3d(100%, 0, 0);
  transform: translate3d(100%, 0, 0); }

.slide-in-left.ng-enter, .slide-in-left > .ng-enter {
  -webkit-transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms;
  transition: all cubic-bezier(0.1, 0.7, 0.1, 1) 400ms; }

.slide-in-left.ng-enter-active, .slide-in-left > .ng-enter-active {
  -webkit-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.slide-in-left.ng-leave, .slide-in-left > .ng-leave {
  -webkit-transition: all ease-in-out 250ms;
  transition: all ease-in-out 250ms; }

.item-avatar > img:first-child, .item-avatar-left > img:first-child, .item-avatar-right > img:first-child {
  border-radius: 0; }
